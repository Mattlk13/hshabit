lexeme:<test000.hbt:1:1>:RId:area
lexeme:<test000.hbt:2:1>:RId:as
lexeme:<test000.hbt:3:1>:RId:bitdata
lexeme:<test000.hbt:4:1>:RId:case
lexeme:<test000.hbt:5:1>:RId:class
lexeme:<test000.hbt:6:1>:RId:data
lexeme:<test000.hbt:7:1>:RId:deriving
lexeme:<test000.hbt:8:1>:RId:do
lexeme:<test000.hbt:9:1>:RId:else
lexeme:<test000.hbt:10:1>:RId:fails
lexeme:<test000.hbt:11:1>:RId:hiding
lexeme:<test000.hbt:12:1>:RId:if
lexeme:<test000.hbt:13:1>:RId:import
lexeme:<test000.hbt:14:1>:RId:in
lexeme:<test000.hbt:15:1>:RId:infix
lexeme:<test000.hbt:16:1>:RId:infixl
lexeme:<test000.hbt:17:1>:RId:infixr
lexeme:<test000.hbt:18:1>:RId:instance
lexeme:<test000.hbt:19:1>:RId:lab
lexeme:<test000.hbt:20:1>:RId:let
lexeme:<test000.hbt:21:1>:RId:module
lexeme:<test000.hbt:22:1>:RId:nat
lexeme:<test000.hbt:23:1>:RId:of
lexeme:<test000.hbt:24:1>:RId:qualified
lexeme:<test000.hbt:25:1>:RId:struct
lexeme:<test000.hbt:26:1>:RId:then
lexeme:<test000.hbt:27:1>:RId:type
lexeme:<test000.hbt:28:1>:RId:where
lexeme:EOF
